@if (!DataLink.IsNullOrEmpty(DataLink) && DataLink.BoardId != default)
{
	<div class="item mt-3 mb-4" role="listitem" style="width: 400px">
		<div class="card main-card">
			<div class="card-body">
				<label class="text-center">Data Link</label>
				<div class="card secondary-card mt-3">
					<div class="card-header">
						From
					</div>
					<div class="card-body">
						<strong>Arduino Client Id</strong>
						<div class="gray-txt">@DataLink.BoardId</div>
						<div class="row gutters-sm mt-3">
							<div class="col-md-6">
								<strong>Component Id</strong>
								<div class="gray-txt">@DataLink.ComponentId</div>
							</div>
							<div class="col-md-6">
								<strong>PortPin Id</strong>
								<div class="gray-txt">@DataLink.PinId</div>
							</div>
						</div>
					</div>
				</div>
				<div class="card secondary-card mt-3">
					<div class="card-header">
						To
					</div>
					<div class="card-body">
						<strong>Arduino Client Id</strong>
						<div class="gray-txt">@DataLink.ParentPortPin.ParentComponent.ParentClient.Id</div>
						<div class="row gutters-sm mt-3">
							<div class="col-md-6">
								<strong>Component Id</strong>
								<div class="gray-txt">@DataLink.ParentPortPin.ParentComponent.Id</div>
							</div>
							<div class="col-md-6">
								<strong>PortPin Id</strong>
								<div class="gray-txt">@DataLink.ParentPortPin.Id</div>
							</div>
						</div>
					</div>
				</div>

				<div class="text-center">
					<button class="btn btn-primary round-button mt-3" style="width: 100px" @onclick="DeleteDataLink">
						<img src="img/trash.png" class="round-btn-img" />
					</button>
				</div>
			</div>
		</div>
	</div>
}

@code {
	[Parameter]
	public DataLink DataLink { get; set; }

	private void DeleteDataLink()
	{
		//TODO: DELETE does not work, Fix it!!
		DataLinker.RemoveLink(DataLink.Id);

		PortPin portPin = DataLink.ParentPortPin;
		if (!ClientManager.GetClientIndexById(portPin.ParentComponent.ParentClient.Id, out int clientIndex)) return;
		if (!ClientManager.GetComponentIndexById(clientIndex, portPin.ParentComponent.Id, out int componentIndex)) return;
		if (!ClientManager.GetBoardPinIndexById(clientIndex, componentIndex, portPin.Id, out int pinIndex)) return;

		ClientManager.Clients[clientIndex].Components[componentIndex].ConnectedPins[pinIndex].DataLink = new();
	}

	protected override async Task OnParametersSetAsync()
	{
		StateHasChanged();
	}
}
