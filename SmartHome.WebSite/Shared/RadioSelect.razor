@if (PortPin is not null)
{
    <div class="form-check form-check-inline">
        <input class="form-check-input" type="radio" name="inlineRadioOptions" id="inlineRadio0" 
               value="0" @onchange="UpdateSelection" checked="@IsChecked("0")" disabled="@disableOption0">
        <label class="form-check-label" for="inlineRadio10">None</label>
    </div>
    <div class="form-check form-check-inline">
        <input class="form-check-input" type="radio" name="inlineRadioOptions" id="inlineRadio1" 
               value="1" @onchange="UpdateSelection" checked="@IsChecked("1")" disabled="@disableOption1">
        <label class="form-check-label" for="inlineRadio1">Negation</label>
    </div>
    <div class="form-check form-check-inline">
        <input class="form-check-input" type="radio" name="inlineRadioOptions" id="inlineRadio2" 
               value="2" @onchange="UpdateSelection" checked="@IsChecked("2")" disabled="@disableOption2">
        <label class="form-check-label" for="inlineRadio2">Addition</label>
    </div
    <div class="form-check form-check-inline">
        <input class="form-check-input" type="radio" name="inlineRadioOptions" id="inlineRadio3" 
               value="3" @onchange="UpdateSelection" checked="@IsChecked("3")" disabled="@disableOption3">
        <label class="form-check-label" for="inlineRadio3">Substraction</label>
    </div>
    <div class="form-check form-check-inline">
        <input class="form-check-input" type="radio" name="inlineRadioOptions" id="inlineRadio4" 
               value="4" @onchange="UpdateSelection" checked="@IsChecked("4")" disabled="@disableOption4">
        <label class="form-check-label" for="inlineRadio4">Multiplication</label>
    </div>
    <div class="form-check form-check-inline">
        <input class="form-check-input" type="radio" name="inlineRadioOptions" id="inlineRadio5" 
               value="5" @onchange="UpdateSelection" checked="@IsChecked("5")" disabled="@disableOption5">
        <label class="form-check-label" for="inlineRadio5">Division</label>
    </div>
}

@code {
    [Parameter]
    public EventCallback<DataLink.ValueOperations> ValueOperation { get; set; }

    [Parameter]
    public PortPin PortPin { get; set; }

    string selectedOption = "0"; // default selected option

    bool disableOption0 = false;
    bool disableOption1 = false;
    bool disableOption2 = false;
    bool disableOption3 = false;
    bool disableOption4 = false;
    bool disableOption5 = false;

    private async Task UpdateSelection(ChangeEventArgs e)
    {
        selectedOption = e.Value.ToString();
        Type enumType = typeof(DataLink.ValueOperations);
        DataLink.ValueOperations value = (DataLink.ValueOperations)int.Parse(selectedOption);
        await ValueOperation.InvokeAsync(value);
    }

    private bool IsChecked(string option) => selectedOption == option;

    private void SetEnabledOptions()
    {
        if (PortPin is not null)
        {
            if (PortPin.ValueType == PortPin.ObjectValueType.String)
            {
                disableOption1 = true;
                disableOption2 = true;
                disableOption3 = true;
                disableOption4 = true;
                disableOption5 = true;
            }
            else if (PortPin.ValueType == PortPin.ObjectValueType.Boolean)
            {
                disableOption2 = true;
                disableOption3 = true;
                disableOption4 = true;
                disableOption5 = true;
            }
            else
            {
                disableOption1 = true;
            }
        }
    }

    protected override async Task OnParametersSetAsync()
    {
        SetEnabledOptions();
        StateHasChanged();
	}
}
