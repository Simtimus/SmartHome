@inject IJSRuntime JSRuntime
@inject Models.ClipboardService ClipboardService

<div class="bg-arduinolist border-right vh-100" id="sidebar-wrapper">

    <div class="list-group list-group-flush overflow-auto" style="margin: 20px; height: 97%">
        @foreach (var client in Clients)
        {
            string style = "idle";
            @if (client.Id.Equals(SelectedClient.Id))
            {
                style = "active";
            }
            <div class="card mb-3 @style">
                <button @onclick="() => OnClientClick(client)" class="button-transparent">
                    <div class="card-body">
                        <div class="inline">
                            @if (client.State == ArduinoClient.ConnectionState.Online)
                            {
                                <img src="/img/online-circle.png" class="activity-img">
                            }
                            else
                            {
                                <img src="/img/offline-circle.png" class="activity-img">
                            }
                            <div>@client.Name</div>
                        </div>
                        @if (client.Id.Equals(SelectedClient.Id))
                        {
                            <div>Latency: @client.Ping ms</div>
                            <div>@client.IP</div>
                        }
                    </div>
                </button>
            </div>
        }
    </div>

   @* <div class="card mt-3">
        <button class="button-transparent">
            <div class="card-body card-button">
                <img src="/img/home.png" class="button-img" />
                <h5 class="mt-2">Some button</h5>
            </div>
        </button>
    </div>*@
</div>

@code {
    [Parameter]
    public List<ArduinoClient> Clients { get; set; } = new List<ArduinoClient>();

    [Parameter]
    public EventCallback<ArduinoClient> ClientClick { get; set; }

    private ArduinoClient SelectedClient = new();

    public Guid[,] ClientsTable = new Guid[,] { };

    protected override async Task OnParametersSetAsync()
    {
        if (Clients != null && Clients.Count > 0)
        {

        }
    }

    private async Task OnClientClick(ArduinoClient client)
    {
        SelectedClient = client;
        await ClipboardService.CopyToClipboard(JSRuntime, client.Id.ToString());
        await ClientClick.InvokeAsync(client);
    }
}
