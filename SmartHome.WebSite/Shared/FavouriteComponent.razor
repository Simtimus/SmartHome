@if (Component is not null)
{
    int Description = Component.Id;
    <div class="item mt-3 mb-4" role="listitem" style="width: 400px">
        <div class="card">
            <div class="card-body">
                <div class="inline space-between row gutters-sm">
                    <div class="col-md-10">
                        <h5>Id: @Component.Id - @Component.Description</h5>
                    </div>

                    <div class="col-md-2">
                        @if (Component.Favorite)
                        {
                            <img src="/img/favourite-check.png" class="btn-img" @onclick="() => ChangeFavouriteState()">
                        }
                        else
                        {
                            <img src="/img/favourite-uncheck.png" class="btn-img" @onclick="() => ChangeFavouriteState()">
                        }
                    </div>
                </div>
                @if (Component.ConnectedPins.Count > 0)
                {
                    <a>Connected pins: @Component.ConnectedPins.Count</a>
                    @foreach (PortPin boardPin in Component.ConnectedPins)
                    {
                        <FavouritePortPinSmall PortPin="boardPin"></FavouritePortPinSmall>
                    }
                }
                else
                {
                    <a>Component has no connected pins.</a>
                }
            </div>
        </div>
    </div>
}

@code {
    [Parameter]
    public FavouriteElement FavComponent { get; set; } = new();

    private IGeneralComponent? Component = null;

    private void ChangeFavouriteState()
    {
        if (Component is null)
            return;

        if (!ClientManager.GetClientIndexById(Component.ParentClient.Id, out int clientIndex)) return;
        if (!ClientManager.GetComponentIndexById(clientIndex, Component.Id, out int componentIndex)) return;

        ClientManager.Clients[clientIndex].Components[componentIndex].Favorite = !Component.Favorite;
    }

    protected override async Task OnParametersSetAsync()
    {
        if (!ClientManager.GetClientIndexById(FavComponent.ClientId, out int clientIndex)) return;
        if (!ClientManager.GetComponentIndexById(clientIndex, FavComponent.ComponentId, out int componentIndex)) return;

        Component = ClientManager.Clients[clientIndex].Components[componentIndex];
        StateHasChanged();
    }
}
